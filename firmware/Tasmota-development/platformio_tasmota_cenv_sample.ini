[env:tasmota-rangeextender]
build_flags                 = ${env.build_flags}
                              -D FIRMWARE_RANGE_EXTENDER
                              -D PIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
                              -D USE_WIFI_RANGE_EXTENDER
                              -D USE_WIFI_RANGE_EXTENDER_NAPT

[env:tasmota32-rangeextender]
extends                     = env:tasmota32_base
build_flags                 = ${env:tasmota32_base.build_flags}
                              -D FIRMWARE_TASMOTA32
                              -D USE_WIFI_RANGE_EXTENDER
                              -D USE_WIFI_RANGE_EXTENDER_NAPT

; *** Debug version used for PlatformIO Home Project Inspection
[env:tasmota-debug]
build_type                  = debug
build_unflags               = ${env.build_unflags}
build_flags                 = ${env.build_flags}
;                              -Wstack-usage=300

[env:tasmota32-debug]
extends                     = env:tasmota32_base
build_type                  = debug
build_unflags               = ${env:tasmota32_base.build_unflags}
build_flags                 = ${env:tasmota32_base.build_flags}
monitor_filters             = esp32_exception_decoder
;                              -Wstack-usage=300

; *** JTAG Debug version, needs esp-prog or FT2232H or FT232H
; *** Install howto for Windows https://community.platformio.org/t/esp32-pio-unified-debugger/4541/20
[env:tasmota32-ocd]
build_type              = debug
extends                 = env:tasmota32_base
debug_tool              = esp-prog
upload_protocol         = esp-prog
debug_init_break        = tbreak setup
build_unflags           = ${env:tasmota32_base.build_unflags}
build_flags             = ${env:tasmota32_base.build_flags}
monitor_filters         = esp32_exception_decoder

; *** JTAG Debug version, needs esp-prog or FT2232H or FT232H
[env:tasmota32solo1-ocd]
build_type              = debug
extends                 = env:tasmota32solo1
platform                = ${core32solo1.platform}
platform_packages       = ${core32solo1.platform_packages}
board                   = esp32_solo1_4M
debug_tool              = esp-prog
upload_protocol         = esp-prog
debug_init_break        = tbreak setup
build_unflags           = ${core32solo1.build_unflags}
build_flags             = ${core32solo1.build_flags}
monitor_filters         = esp32_exception_decoder

; *** pre alpha S3 Version
[env:tasmota32s3]
extends                 = env:tasmota32_base
platform                = https://github.com/Jason2866/platform-espressif32.git#IDF44/ESP32-S3
platform_packages       = framework-arduinoespressif32 @ https://github.com/Jason2866/esp32-arduino-lib-builder/releases/download/621/framework-arduinoespressif32-v4.4_dev-a829191c37.tar.gz
board                   = esp32s3
build_flags             = ${env:tasmota32_base.build_flags} -D FIRMWARE_TASMOTA32
lib_extra_dirs          =
                          lib/lib_basic
                          lib/lib_ssl
                          lib/lib_i2c
                          lib/lib_rf
                          lib/lib_div
                          lib/lib_display
                          lib/lib_audio
                          lib/libesp32
                          lib/libesp32_lvgl
                          lib/libesp32_div
                          lib/libesp32_eink
lib_ignore              =
                          TTGO TWatch Library
                          NimBLE-Arduino
                          Micro-RTSP
                          epdiy
                          NeoPixelBus
